<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable Initialization

draw = false;
alarm[0] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggle Draw

draw = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Pie

draw_set_font(ft_files);

if(draw) {
    if(!instance_exists(obj_shop_bg)
&amp;&amp; !instance_exists(obj_text_editor)
&amp;&amp; !instance_exists(obj_audio_editor)
&amp;&amp; !instance_exists(obj_picture_editor)) {
    var col;
    if((global.bytes / global.maxBytes) &lt; 0.6) { col = make_colour_rgb(7, 255, 1);  }
    if((global.bytes / global.maxBytes) &gt; 0.6 || (global.maxBytes / global.bytes) &lt; 0.8)  { col = make_colour_rgb(255, 83, 12); }
    if((global.bytes / global.maxBytes) &gt; 0.8) { col = make_colour_rgb(255, 7, 1);  }
    
    if(room == rm_screen) {
        draw_pie(48, 148, global.bytes, global.maxBytes, col, 10, 1);
        draw_set_colour(make_colour_rgb(40, 40, 40));
        draw_text(35, 110, string(global.bytes/1000) + "KB / " + "#" + string(global.maxBytes/1000) + "KB");
    }
    if(room == rm_main) {
        if(obj_monitor.sprite_index == spr_monitor_idle &amp;&amp; obj_monitor.image_xscale == 1) {
            if(global.bytes &lt; global.maxBytes) {
                draw_pie(56, 70, global.bytes, global.maxBytes, col, 8, 1);
            } else {
                draw_pie(56, 70, 1, 1, col, 8, 1);
            }
        }
    }
}
}

//40, 70
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
