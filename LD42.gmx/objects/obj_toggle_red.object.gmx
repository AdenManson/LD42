<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_toggle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable Initialization

image_index = 0;
image_speed = 0;
large = false;
j = 0;
count = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggle

if(!instance_exists(obj_text_editor) &amp;&amp;
!instance_exists(obj_picture_editor) &amp;&amp;
!instance_exists(obj_audio_editor) &amp;&amp; 
!instance_exists(obj_shop_bg) &amp;&amp; room == rm_screen) {
    if(position_meeting(mouse_x, mouse_y, self)) {
        image_blend = make_colour_rgb(140, 140, 140);
        
        //audio_sound_pitch(sd_select, random_range(0.8, 1.2));
        //audio_play_sound(sd_select, 10, 0);
        
        if(mouse_check_button_pressed(mb_left) &amp;&amp; !global.pause) {
            large = !large;
            obj_scroll.reset = true;
            image_index = large;
            j = 0;
            
            if(large) audio_sound_pitch(sd_press, 1);
            if(!large) audio_sound_pitch(sd_press, 0.8);
            
            audio_play_sound(sd_press, 10, 0);
        }
    } else {
        image_blend = c_white;
    }
}

if(room != rm_screen) {
    visible = false;
}

if(instance_exists(obj_text_editor)) ||
(instance_exists(obj_picture_editor)) ||
(instance_exists(obj_audio_editor)) ||
(instance_exists(obj_shop_bg))
{
    visible = false;
}

if(room == rm_screen) {
    if(!instance_exists(obj_text_editor)) &amp;&amp;
    (!instance_exists(obj_picture_editor)) &amp;&amp;
    (!instance_exists(obj_audio_editor)) &amp;&amp; 
    (!instance_exists(obj_shop_bg))
    {
        visible = true;  
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sorting Files
if(room == rm_screen) {
    if(large) {
        if(j = 0) {
            // Loop to get amount of large files
            for(i = 0; i &lt; instance_number(obj_digital_file); i++) {
                var inst = instance_find(obj_digital_file, i);
                if(inst.delete) {
                    inst.posID = count;
                    count++;
                    if(!instance_exists(obj_shop_bg)) {
                        inst.visible = true;
                    } else {
                        inst.visible = false;
                    }
                } else {
                    inst.visible = false;
                }
                global.fileCount = count;
                obj_digital_file.reposition = true;
            }

            count = 0;
            j = 1;
        }
    } else {
        if(j == 0) {
            obj_digital_file.reposition = true;
            //count = 0;
            j = 1;
        }
    }
}

// reset global.fileCount using new value of subtracted non-large
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
