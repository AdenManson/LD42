<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_file</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable Initialization

selected = false;
xx = 0;
yy = 0;
canDrag = true;
i = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy + Create File

//108 17  (+22)
if(instance_exists(obj_insert)) obj_insert.vibrate = false;
instance_create(108, (22*global.fileAmount)+17, obj_digital_file);
global.fileAmount++;
repeat(irandom_range(2, 3))  { instance_create(irandom_range(40, room_width-40), -30, obj_dollar); global.money++; }
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dragging

if(!global.pause &amp;&amp; room == rm_main) {
if(canDrag) {
    if(!selected) {
        if(position_meeting(mouse_x, mouse_y, self)) {
            if(mouse_check_button_pressed(mb_left)) {
                xx = x - mouse_x;
                yy = y - mouse_y;
                /*if(!instance_exists(obj_mouse)) {
                    instance_create(mouse_x, mouse_y, obj_mouse);
                }*/
                audio_sound_pitch(sd_page, random_range(1, 1.2));
                audio_play_sound(sd_page, 10, 0);
                selected = true;
            }
        }
    }
    
    if(mouse_check_button_released(mb_left)) {
        
        /*if(instance_exists(obj_mouse)) {
            instance_destroy(obj_mouse);
        }*/
        
        if(selected) {
            if(position_meeting(mouse_x, mouse_y, self)) {
                audio_sound_pitch(sd_page, random_range(0.7, 0.8));
                audio_play_sound(sd_page, 10, 0);
            }
            selected = false;
        }
    }
    
    if(selected) {
        //if(instance_exists(obj_mouse)) {
        
            phy_position_x = mouse_x + xx;
            phy_position_y = mouse_y + yy;
        //}
    }
    
    if(position_meeting(mouse_x, mouse_y, obj_monitor))  selected = false;
    if(position_meeting(mouse_x, mouse_y, obj_computer)) selected = false;
}

phy_position_x = clamp(phy_position_x, 0, room_width);
phy_position_y = clamp(phy_position_y, 0, room_height);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Inserting
if(!global.pause &amp;&amp; obj_first_time.firstTime &amp;&amp; room == rm_main) {
    if(obj_tutorial.state &gt; 14) {
        if(instance_exists(obj_insert_area)) {
        if(place_meeting(x, y, obj_insert_area) &amp;&amp; selected &amp;&amp; obj_monitor_on.on) {
                canDrag = false;
                selected = false;
                
                phy_active = false;
                
        }
        }
    
        if(!canDrag) {
            if(i = 0) {
                alarm[0] = 60;

                i = 1;
            }
            if(instance_exists(obj_insert)) obj_insert.vibrate = true;
            
            if(phy_rotation &lt; 0) phy_rotation += 2;
            if(phy_rotation &gt; 0) phy_rotation -= 2;
            
            if(phy_position_y &lt;= 128) phy_position_y += 0.8;
            if(phy_position_y &gt; 128) phy_position_y -= 0.8;
            
            if(phy_position_x &lt;= 170) phy_position_x += 0.8;
            if(phy_position_x &gt; 170) phy_position_x -= 0.8;
            
        }
    }
} else {
    if(!global.pause &amp;&amp; room == rm_main)
        if(instance_exists(obj_insert_area)) {
        if(place_meeting(x, y, obj_insert_area) &amp;&amp; selected &amp;&amp; obj_monitor_on.on) {
            canDrag = false;
            selected = false;
                    
            phy_active = false;
                
        }
        }
    
        if(!canDrag) {
            if(i = 0) {
                alarm[0] = 60;
                i = 1;
            }
            if(instance_exists(obj_insert)) obj_insert.vibrate = true;
            
            if(phy_rotation &lt; 0) phy_rotation += 2;
            if(phy_rotation &gt; 0) phy_rotation -= 2;
            
            if(phy_position_y &lt;= 128) phy_position_y += 0.8;
            if(phy_position_y &gt; 128) phy_position_y -= 0.8;
            
            if(phy_position_x &lt;= 170) phy_position_x += 0.8;
            if(phy_position_x &gt; 170) phy_position_x -= 0.8;
            
        }
    }
if(global.pause) selected = false;
//170, 128
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Visibility

if(room != rm_main) {
    visible = false;
    phy_active = false;
} else {
    visible = true;
    if(canDrag) phy_active = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_insert">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monitor">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_base">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_computer">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_position_x = room_width/2;
phy_position_y = room_height/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1.20000004768372</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.600000023841858</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>30,0</point>
    <point>30,40</point>
    <point>0,40</point>
  </PhysicsShapePoints>
</object>
