<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_digital_file</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable Initialization

bytes = irandom_range(16000, 32000) * global.byteMultiplier; // later files take up more space
global.bytes += bytes;
delete = 0;
if(!obj_first_time.firstTime) {
    if(bytes &gt; (21200*global.byteMultiplier)) {
        delete = true;
    }
}
//debug(bytes);
//debug("multi: " + string(global.byteMultiplier));

posID = 0;
col2 = c_white;
completed = false;

reposition = false;

alarm[0] = 20;
visible = false;

firstY = y;
i = 1;

randomize();
//random_set_seed(mouse_x + mouse_y);

fileType = choose("music", "image", "text");

musicName = choose(
                    "guccigang",
                    "n0t_th3_CIA",
                    "G0rillaz",
                    "casual bongos",
                    "microdisco",
                    "Eürøelectrø",
                    "funk noise",
                    "not hardbass",
                    "jungle-jit",
                    "Lätin Indö fünky",
                    "bedtime psychobop",
                    "French synth-pop",
                    "alt-funky",
                    "sadwave");

imageName = choose(
                    "alien visitor",
                    "atomic mouth",
                    "my social life",
                    "passports",
                    "bank stuff",
                    "advanced spy",
                    "ocean",
                    "day at park",
                    "N0t_CIA_dOcuM3n7s",
                    "nuclear codes",
                    "my eyebrows");

textName = choose(
                    "FBI_names",
                    "CIA_isnt_here",
                    "bank stuff",
                    "DOB",
                    "suzy was h3re",
                    "road work ahead",
                    "transactions",
                    ":)",
                    "studio documents");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggle Visibility

if(room == rm_screen) {
    visible = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UI
if(!global.pause) {
if(room == rm_screen &amp;&amp; visible) {
//if(!position_meeting(mouse_x, mouse_y, obj_compress)) {
    if(position_meeting(mouse_x, mouse_y, self)) {
        if(mouse_check_button_pressed(mb_right) &amp;&amp; delete) {
            audio_sound_pitch(sd_click, random_range(0.8, 1.2));
            audio_play_sound(sd_click, 10, 0);
            if(!instance_exists(obj_compress)) {
                var inst = instance_create(x+132, y, obj_compress);
                inst.parent = self;
            }
        } else {
            if(mouse_check_button_pressed(mb_right)) {
                audio_sound_pitch(sd_click, random_range(0.8, 1.2));
                audio_play_sound(sd_click, 10, 0);
        }
    }
    } else {
        if(!position_meeting(mouse_x, mouse_y, obj_digital_file) &amp;&amp; !position_meeting(mouse_x, mouse_y, obj_compress)) {
            if(instance_exists(obj_compress)) {
                instance_destroy(obj_compress);
            }
        }
    }
//}

    if(obj_screen.image_xscale != 1) {
        visible = false;
    }
}
}

if(completed) {
    delete = false;
    if(instance_exists(obj_tutorial)) {
        if(obj_tutorial.state == 23) {
            obj_tutorial.state++;
        }
    }
}

if(!global.pause) {
    if(mouse_check_button_pressed(mb_right)) {

    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Scrolling
if(!global.pause) {
if(room == rm_screen &amp;&amp; obj_scroll.canScroll) {
    var c = instance_number(obj_digital_file)/3;
    
    if(obj_scroll.dir != 'none') y -= obj_scroll.yChange * c;
}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Visibility

if(room == rm_screen) {

    if(!instance_exists(obj_toggle_red)) {

        if(instance_exists(obj_screen_shake)
        || instance_exists(obj_screen_shake_small)
        || instance_exists(obj_shop_bg)
        || instance_exists(obj_text_editor)
        || instance_exists(obj_audio_editor)
        || instance_exists(obj_picture_editor)) {
        
            if(i == 0) {
                y = firstY;
                i = 1;
            }
            visible = false;
        } else {
            visible = true;
        }
    }
    
    if(instance_exists(obj_toggle_red)) {
        if(!obj_toggle_red.large) {
            if(instance_exists(obj_screen_shake)
            || instance_exists(obj_screen_shake_small)
            || instance_exists(obj_shop_bg)
            || instance_exists(obj_text_editor)
            || instance_exists(obj_audio_editor)
            || instance_exists(obj_picture_editor)) {
        
                if(i == 0) {
                    y = firstY;
                    i = 1;
                }
                visible = false;
            } else {
                visible = true;
            }
        }
    }
} else {
    i = 0;
    visible = false;
}

if(instance_exists(obj_text_editor)) ||
(instance_exists(obj_audio_editor)) ||
(instance_exists(obj_picture_editor)) {
    visible = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Respoition

if(reposition) {
    if(obj_toggle_red.large) {
        if(delete) {
            obj_scroll.reset = true;
            y = (22*posID)+17;
        }
    } else {
        y = firstY;
    }
    reposition = false;
}

if(instance_exists(obj_monitor_static)) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw File Name + Postfix


if(room == rm_screen) {
    draw_set_font(ft_files);
    var col = make_color_rgb(40,40,40);
    
    if(delete) { col2 = c_red; } else { col2 = c_white; }
    
    if(!global.pause) {
    if(!position_meeting(mouse_x, mouse_y, obj_compress) &amp;&amp; (!obj_scroll.selected)) {
        if(position_meeting(mouse_x, mouse_y, self)) {
            draw_set_blend_mode(bm_subtract);
            if(mouse_check_button(mb_any)) {
                draw_set_blend_mode(bm_add);
            }
        } else {
            draw_set_blend_mode(bm_normal);
        }
    }}
    
    if(fileType == "music") {
        draw_set_colour(col2);
        draw_sprite_ext(sprite_index, 0, x, y, 1, 1, 0, col2, 1);
        draw_set_blend_mode(bm_normal);
        draw_set_colour(col);
        draw_text(x+2, y+2, musicName + ".wav");
    }
    
    if(fileType == "image") {
        draw_set_colour(col2);
        draw_sprite_ext(sprite_index, 2, x, y, 1, 1, 0, col2, 1);
        draw_set_blend_mode(bm_normal);
        draw_set_colour(col);
        draw_text(x+2, y+2, imageName + ".jpg");
    }
    
    if(fileType == "text") {
        draw_set_colour(col2);
        draw_sprite_ext(sprite_index, 1, x, y, 1, 1, 0, col2, 1);
        draw_set_blend_mode(bm_normal);
        draw_set_colour(col);
        draw_text(x+2, y+2, textName + ".txt");
    }
    draw_set_blend_mode(bm_normal);

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
