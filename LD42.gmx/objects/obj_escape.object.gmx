<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_escape</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variable Initialization

image_index = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rollover

if(!global.pause &amp;&amp; !instance_exists(obj_mic) &amp;&amp; !instance_exists(obj_draw) &amp;&amp; !instance_exists(obj_text)) {

if(position_meeting(mouse_x, mouse_y, self)) {
    image_blend = make_colour_rgb(120, 120, 120);
    
    if(mouse_check_button_pressed(mb_left)) {
        image_index = 1;
    }
    if(mouse_check_button_released(mb_left)) {
        image_index = 0;
        
        if(instance_exists(obj_text_editor)) instance_destroy(obj_text_editor);
        if(instance_exists(obj_delete) )instance_destroy(obj_delete);
        if(instance_exists(obj_line)) instance_destroy(obj_line);
        if(instance_exists(obj_create_lines)) instance_destroy(obj_create_lines);
        if(instance_exists(obj_delete_box)) instance_destroy(obj_delete_box);
        if(instance_exists(obj_delete_cover)) instance_destroy(obj_delete_cover);
        if(instance_exists(obj_particle)) instance_destroy(obj_particle);
        if(instance_exists(obj_scissors)) instance_destroy(obj_scissors);
        if(instance_exists(obj_picture_editor)) instance_destroy(obj_picture_editor);
        if(instance_exists(obj_paint)) instance_destroy(obj_paint);
        if(instance_exists(obj_audio_editor)) instance_destroy(obj_audio_editor);
        if(instance_exists(obj_audio_bar)) instance_destroy(obj_audio_bar);
        if(instance_exists(obj_wave)) instance_destroy(obj_wave);
        obj_reset_files.reset = true;
        obj_scroll.reset = true;
        instance_destroy();
    }
} else {
    image_blend = c_white;
    image_index = 0;
}
if(position_meeting(mouse_x, mouse_y, self)) {
    if(mouse_check_button_pressed(mb_left)) {
        audio_sound_pitch(sd_click, random_range(0.8, 1.2));
        audio_play_sound(sd_click, 10, 0);
    }
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
